Một chia sẻ rất hay của bạn Nam Phan về cách build 1 rootfs bằng tay cho người mới học. Follow theo cách này thì mọi người sẽ hiểu rõ bản chất việc tạo ra rootfs hơn là dùng tool. Cách làm cũng khá đơn giản chứ không phức tạp như mình nghĩ.
Trích nguyên văn comment của bạn Nam Phan:

Mình cũng từng build rootfs thủ công và chạy được rồi. Hi vọng những thông tin sau đây bổ ích cho bạn:

- Một rootfs gồm nhiều folder như: /dev, /etc, /bin, /home, … Nhưng bắt buộc tối thiểu phải có những thành phần sau:
+ /lib: chứa các share lib phục vụ chạy các cmd, application
+ /etc: chứa các file init của hệ thống
+ chương trình init: là chương trình sẽ chạy ngay sau khi kernel mount xong rootfs
+ /bin, /sbin: chứa các cmd cơ bản: cp, ls, cat, cd…

- Cách build: có 2 cách là build thủ công và build bằng tool:
+ Build thủ công: bạn sẽ phải tạo một folder rootfs rồi sau đó lắp các mảnh ghép như trên để rootfs của bạn có thể hoạt động được(các mảnh ghép tìm ở đâu thì mình nói ở dưới)
+ Build bằng tool: dùng các tool như Buildroot, Yoctor project để buiild bạn sẽ có được cả rootfs gồm đầy đủ các thành phần
=> mình nghĩ bạn nên build bằng tay để hiểu nhiều hơn

- Build rootfs thủ công:
+ B1: đầu tiên tạo folder rootfs: mkdir rootfs, ta sẽ xây dựng các thành phần từ đây
+ B2: build các cmd và chương trình init. Nếu đúng thì bạn phải download source code của các cmd về rồi cross-compile nó rồi chép vào /bin, /sbin trong rootfs => nhưng vậy thì quá lâu nên ngta đã có một cái gọi là Busybox tích hợp các cmd đó trong 1 file thực thi.
* Bạn search trên mạng cách build Busybox
* Build xong sẽ được một folder tên “_install” chứa các folder: bin, sbin, usr, linuxrc => chép hết vào rootfs
=> vậy là ta được 1 mảnh ghép
+ B3: tạo các file init cần thiết trong etc: build xong Busybox ta cũng đc /etc lun => vào examples/bootploppy sẽ thấy folder /etc trong đó: nó gồm các file như nào thì bạn tìm hiểu thêm nhé => chép etc vào rootfs
+ B4: các share lib: các lib này có trong folder cài đặt toolchain. Muốn tìm folder này thì dùng lệnh:
<gcc của toolchain> -print-sysroot
Ví dụ: arm-himix200-linux-gcc -print-sysroot
=> nó sẽ in ra đường dẫn chứa sysroot => tới đường dẫn này sẽ thấy folder lib => đây chứa các lib bạn cần. Nó sẽ có rất nhiều. Ngta khuyên nên chép hết các lib vào /lib của rootfs bạn đang build. Nhưng bạn cũng nên biết lib có những thư viện quan trọng nào: nó gồm các lib quan trọng:
+ libc: thư viện chuẩn của C
+ libm: thư viện math
+ libpthread
+ libstdc++
+ ld-linux
=> tối thiểu phải có các lib này chứ ko là rootfs chạy ko được
=> chép cả file lib thật cũng như file symbolic link của các lib

+ B5: tới đây bạn đã có các một rootfs gồm các thành phần bắc buộc tối thiểu phải có để hoạt động được rồi đó. Tạo thêm các folder: mkdir dev home mnt opt root
=> vậy là rootfs của bạn đã được build OK

Tới đây bạn phải tiếp tục tạo image của rootfs thì kernel mới mount được:
+ B1: tạo một image trống 5M
if=/dev/null of=rootfs_busybox.ext4 bs=5MB count=10
+ B2: thay đổi kích thước của image:
truncate -s 100M rootfs_busybox.ext4
+ B3: format image đó về format mà bạn muốn. Cái này phụ thuộc vào thiết bị bạn muốn boot là gì. Nếu là MMC/SC thì là EXT4, nếu là spi flash thì là jffs2…
mkfs.ext4 rootfs_busybox.ext4
+ B4: mount image đó vào thư mục /mnt và copy hết trong rootfs bạn đã build vào /mnt => sau đó umount /mnt là bạn đã có được một image rootfs để chạy rồi đó

=> sau đó việc tiếp theo là chép các file uboot, kernel, rootfs vào thiết bị bạn muốn boot(USB, MMC/SD…) rồi set biến môi trường bootcmd, bootarg nữa => bạn tự tìm hiểu thêm nhé
=> chúc bạn may mắn